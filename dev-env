#!/usr/bin/env bash -a
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distrbuted under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.


case "$1" in
      setup)
          echo "Setting up dev env ...";
          ./setup.sh
          ;;
      start)
          echo "Starting dev env ..."
          docker-compose up -d --no-recreate
          ;;
      schema-upgrade)
          echo "Starting schema upgrade ...";
          docker-compose run -d --service-ports --entrypoint="/scripts/upgrade-schema.sh" ambari-server -c "cc"
          ;;
      schema-reload)
          echo "Reloading database ...";
          docker-compose run -d --service-ports  --entrypoint="/scripts/reload-schema.sh"  ambari-db
          ;;
      yum-repo-start)
          echo "Starting local yum repo mirror ...";
          docker-compose -f yum-repo.yml up -d
          ;;
      yum-repo-setup)
          echo "Setting up local yum repo mirror ...";
          source .dev-profile
          ./bin/yum-mirror.sh
          ;;
      use-local-yum-repo)
          echo "Setting up local yum repo in ambari ...";
          source .dev-profile
          ./bin/yum-mirror.sh put-local-repo
          ;;
      openldap-start)
          echo "Starting OpenLDAP (SLAPD) ..."
          source .dev-profile
          ./bin/standalone-open-ldap.sh
          ;;
      clean-setup)
          echo "Clean setup ..."
          source .dev-profile
          rm -rf $DEV_AMBARI_PROJECT_DIR/ambari-server/target
          rm -rf $DEV_AMBARI_PROJECT_DIR/ambari-agent/target
          ./setup.sh
          ;;
      build)
          echo "Building modules for the local env"
          ./bin/build.sh
          ;;
      clean-logs)
          echo "Cleaning ambari-server logs"
          rm -rf "$HOME/tmp/docker/ambari-server/logs"
          ;;
      build-hdp-docker-image)
          echo "Creating docker image with HDP pre-installed"
          echo
          echo


          shift
          ./bin/build-hdp-docker-image.sh "$@"
          ;;
      *)
      echo "Available commands:
      ./dev-env setup
      ./dev-env start
      ./dev-env schema-upgrade
      ./dev-env schema-reload
      ./dev-env yum-repo-setup
      ./dev-env yum-repo-start
      ./dev-env use-local-yum-repo
      ./dev-env openldap-start
      ./dev-env clean-setup
      ./dev-env build
      ./dev-env clean-logs
      ./dev-env build-hdp-docker-image (e.g. ./dev-env build-hdp-docker-image http://public-repo-1.hortonworks.com/HDP/centos6/2.x/updates/2.5.3.0 HDP-2.5.3.0-37)
      "
esac
